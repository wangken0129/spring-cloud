#-------------registry-----------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: registry
    spec:
      initContainers:
        - name: init-skywalking-agent
          image: ccr.ccs.tencentyun.com/haiyang/skywalking-agent:7.0.0
          command:
            - 'sh'
            - '-c'
            - 'set -ex;mkdir -p /vmskywalking/agent;cp -r /skywalking/agent/* /vmskywalking/agent;'
          volumeMounts:
            - mountPath: /vmskywalking/agent
              name: skywalking-agent
      containers:
        - image: ccr.ccs.tencentyun.com/spring-boot-cloud/registry:latest
          imagePullPolicy: Always
          name: registry
          ports:
            - containerPort: 8761
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/skywalking/agent
              name: skywalking-agent
      volumes:
        - name: skywalking-agent
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: spring
spec:
  ports:
    - name: http
      port: 8761
      protocol: TCP
      targetPort: 8761
  selector:
    app: registry
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: registry-nginx
  namespace: spring
spec:
  rules:
    - host: registry.infotech.com.tw
      http:
        paths:
          - backend:
              serviceName: registry
              servicePort: 8761
#-------------config-----------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config
  namespace: spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: config
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: config
    spec:
      initContainers:
        - name: init-skywalking-agent
          image: ccr.ccs.tencentyun.com/haiyang/skywalking-agent:7.0.0
          command:
            - 'sh'
            - '-c'
            - 'set -ex;mkdir -p /vmskywalking/agent;cp -r /skywalking/agent/* /vmskywalking/agent;'
          volumeMounts:
            - mountPath: /vmskywalking/agent
              name: skywalking-agent
      containers:
        - image: ccr.ccs.tencentyun.com/spring-boot-cloud/config:latest
          imagePullPolicy: Always
          name: config
          ports:
            - containerPort: 8888
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/skywalking/agent
              name: skywalking-agent
      volumes:
        - name: skywalking-agent
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: config
  namespace: spring
spec:
  ports:
    - name: http
      port: 8888
      protocol: TCP
      targetPort: 8888
  selector:
    app: config
#-------------svca-service-----------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: svca-service
  namespace: spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: svca-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: svca-service
    spec:
      initContainers:
        - name: init-skywalking-agent
          image: ccr.ccs.tencentyun.com/haiyang/skywalking-agent:7.0.0
          command:
            - 'sh'
            - '-c'
            - 'set -ex;mkdir -p /vmskywalking/agent;cp -r /skywalking/agent/* /vmskywalking/agent;'
          volumeMounts:
            - mountPath: /vmskywalking/agent
              name: skywalking-agent
      containers:
        - image: ccr.ccs.tencentyun.com/spring-boot-cloud/svca-service:latest
          imagePullPolicy: Always
          name: svca-service
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/skywalking/agent
              name: skywalking-agent
      volumes:
        - name: skywalking-agent
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: svca-service
  namespace: spring
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: svca-service
#-------------svcb-service-----------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: svcb-service
  namespace: spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: svcb-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: svcb-service
    spec:
      initContainers:
        - name: init-skywalking-agent
          image: ccr.ccs.tencentyun.com/haiyang/skywalking-agent:7.0.0
          command:
            - 'sh'
            - '-c'
            - 'set -ex;mkdir -p /vmskywalking/agent;cp -r /skywalking/agent/* /vmskywalking/agent;'
          volumeMounts:
            - mountPath: /vmskywalking/agent
              name: skywalking-agent
      containers:
        - image: ccr.ccs.tencentyun.com/spring-boot-cloud/svcb-service:latest
          imagePullPolicy: Always
          name: svcb-service
          ports:
            - containerPort: 8070
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/skywalking/agent
              name: skywalking-agent
      volumes:
        - name: skywalking-agent
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: svcb-service
  namespace: spring
spec:
  ports:
    - name: http
      port: 8070
      protocol: TCP
      targetPort: 8070
  selector:
    app: svcb-service
#-------------auth-service-----------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      initContainers:
        - name: init-skywalking-agent
          image: ccr.ccs.tencentyun.com/haiyang/skywalking-agent:7.0.0
          command:
            - 'sh'
            - '-c'
            - 'set -ex;mkdir -p /vmskywalking/agent;cp -r /skywalking/agent/* /vmskywalking/agent;'
          volumeMounts:
            - mountPath: /vmskywalking/agent
              name: skywalking-agent
      containers:
        - image: ccr.ccs.tencentyun.com/spring-boot-cloud/auth-service:latest
          imagePullPolicy: Always
          name: auth-service
          ports:
            - containerPort: 5000
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/skywalking/agent
              name: skywalking-agent
      volumes:
        - name: skywalking-agent
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: spring
spec:
  ports:
    - name: http
      port: 5000
      protocol: TCP
      targetPort: 5000
  selector:
    app: auth-service
#-------------gateway-----------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gateway
    spec:
      initContainers:
        - name: init-skywalking-agent
          image: ccr.ccs.tencentyun.com/haiyang/skywalking-agent:7.0.0
          command:
            - 'sh'
            - '-c'
            - 'set -ex;mkdir -p /vmskywalking/agent;cp -r /skywalking/agent/* /vmskywalking/agent;'
          volumeMounts:
            - mountPath: /vmskywalking/agent
              name: skywalking-agent
      containers:
        - image: ccr.ccs.tencentyun.com/spring-boot-cloud/gateway:latest
          imagePullPolicy: Always
          name: gateway
          ports:
            - containerPort: 8060
              protocol: TCP
          env:
            - name: SKYWALKING_ADDR
              value: skywalking-oap-server
            - name: APP_ID
              value: gateway
          volumeMounts:
            - mountPath: /opt/skywalking/agent
              name: skywalking-agent
      volumes:
        - name: skywalking-agent
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: spring
spec:
  ports:
    - name: http
      port: 8060
      protocol: TCP
      targetPort: 8060
  selector:
    app: gateway
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gateway
  namespace: spring
spec:
  rules:
    - host: gateway.infotech.com.tw
      http:
        paths:
          - backend:
              serviceName: gateway
              servicePort: 8060
#-------------zipkin-----------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zipkin
  namespace: spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zipkin
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zipkin
    spec:
      initContainers:
        - name: init-skywalking-agent
          image: ccr.ccs.tencentyun.com/haiyang/skywalking-agent:7.0.0
          command:
            - 'sh'
            - '-c'
            - 'set -ex;mkdir -p /vmskywalking/agent;cp -r /skywalking/agent/* /vmskywalking/agent;'
          volumeMounts:
            - mountPath: /vmskywalking/agent
              name: skywalking-agent
      containers:
        - image: ccr.ccs.tencentyun.com/spring-boot-cloud/zipkin:latest
          imagePullPolicy: Always
          name: zipkin-server
          ports:
            - containerPort: 9411
              protocol: TCP
          env:
            - name: SKYWALKING_ADDR
              value: skywalking-oap-server
            - name: APP_ID
              value: zipkin-server
          volumeMounts:
            - mountPath: /opt/skywalking/agent
              name: skywalking-agent
      volumes:
        - name: skywalking-agent
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: zipkin
  namespace: spring
spec:
  ports:
    - name: http
      port: 9411
      protocol: TCP
      targetPort: 9411
  selector:
    app: zipkin
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: zipkin-nginx
  namespace: spring
spec:
  rules:
    - host: zipkin.infotech.com.tw
      http:
        paths:
          - backend:
              serviceName: zipkin
              servicePort: 9411
#-------------monitor-----------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor
  namespace: spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: monitor
    spec:
      initContainers:
        - name: init-skywalking-agent
          image: ccr.ccs.tencentyun.com/haiyang/skywalking-agent:7.0.0
          command:
            - 'sh'
            - '-c'
            - 'set -ex;mkdir -p /vmskywalking/agent;cp -r /skywalking/agent/* /vmskywalking/agent;'
          volumeMounts:
            - mountPath: /vmskywalking/agent
              name: skywalking-agent
      containers:
        - image: ccr.ccs.tencentyun.com/spring-boot-cloud/monitor:latest
          imagePullPolicy: Always
          name: config
          ports:
            - containerPort: 8040
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/skywalking/agent
              name: skywalking-agent
      volumes:
        - name: skywalking-agent
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: monitor
  namespace: spring
spec:
  ports:
    - name: http
      port: 8040
      protocol: TCP
      targetPort: 8040
  selector:
    app: monitor
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: monitor-nginx
  namespace: spring
spec:
  rules:
    - host: monitor.infotech.com.tw
      http:
        paths:
          - backend:
              serviceName: monitor
              servicePort: 8040